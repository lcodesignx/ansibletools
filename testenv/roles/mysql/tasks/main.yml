---
# tasks file for mysql
- name: install tools Debian
  apt:
    name:
      - python-mysqldb
    state: present
    update_cache: yes
  when: ansible_os_family == "Debian"

- name: install python tools RedHat
  yum:
    name:
      - MySQL-python
    state: present
  when: ansible_os_family == "RedHat"

- name: Download MySQL Repository
  get_url:
    url: http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm
    dest: /tmp
  when: ansible_os_family == "RedHat"

- name: Enable MySQL Repository
  yum:
    name: /tmp/mysql-community-release-el7-5.noarch.rpm
    state: present
  when: ansible_os_family == "RedHat"

- name: install mysql-server Debian
  apt: name=mysql-server state=present
  when: ansible_os_family == "Debian"

- name: install mysql-server RedHat
  yum: name=mysql-server state=present
  when: ansible_os_family == "RedHat"

- name: ensure mysql started Debian
  service: name=mysql state=started enabled=yes
  when: ansible_os_family == "Debian"

- name: ensure mysql started RedHat
  service: name=mysqld state=started enabled=yes
  when: ansible_os_family == "RedHat"

- name: ensure mysql allows for remote connections Debian
  lineinfile:
    path: /etc/mysql/mysql.conf.d/mysqld.cnf
    regexp: '^bind-address'
    line: "bind-address = {{ ansible_eth0.ipv4.address }}"
  notify: restart mysql
  when: ansible_os_family == "Debian"

- name: ensure mysql allows for remove connections RedHat
  lineinfile:
    path: /etc/my.cnf
    insertafter: "\\[mysqld\\]"
    line: "bind-address = {{ ansible_eth0.ipv4.address }}"
  notify: restart mysqld
  when: ansible_os_family == "RedHat"

- name: open mysql port on UFW
  ufw:
    rule: allow
    port: 3306
    proto: tcp
  when: ansible_os_family == "Debian"

- name: open mysql port on firewalld
  firewalld:
    port: 3306/tcp
    state: enabled
    permanent: yes
    immediate: yes
  when: ansible_os_family == "RedHat"

- name: create database
  mysql_db: 
    name: "{{ db_name }}" 
    state: present

- name: create user
  mysql_user: 
    name: "{{ db_user_name }}"
    password: "{{ db_user_pass }}" 
    priv: "'{{ db_name }}'.*:ALL" 
    host: "{{ db_user_host }}" 
    state: present

